count:0_repeat:0_time:2021-07-02 16:52:36
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001760AB5CA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 16:57:04
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000024789AADA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 16:57:36
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001A40FF3DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 17:34:21
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000026D09D7CA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 17:34:54
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000020A0E1EDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 17:51:53
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001C78C57DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 17:52:48
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001718E82DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 20:08:41
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002050CFBDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 20:09:23
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002358B30DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 20:41:23
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000015D0F4ADA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 20:42:55
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000024E0FA7DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 20:43:53
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000025A0837DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 20:56:02
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000013C0CB4DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:17:50
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002170E44CA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:18:41
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001C410C8DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:19:50
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002BF89C9CA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:23:11
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001DD0C95DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:29:14
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000016E8A1ADA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:32:33
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001978BA1DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 0 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-02 21:34:24
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000023B8FEFDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:04:43
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002BE0DB8DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:05:58
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001458B92DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:20:04
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002678DFCDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:25:37
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000024B0FD3DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:32:17
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001858FE2DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:33:50
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001188E5DDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:34:30
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001888E39DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:46:05
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002680846DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:47:30
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001C08CDDDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:48:26
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002CE0CEFDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 09:49:13
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000029D0889DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:01:01
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000025A0F977268> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:02:33
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001E289A46268> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:03:21
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002320D98DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:04:37
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001C98A61DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:05:34
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001CB09D8CA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:07:24
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002090C88DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:07:55
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001F48A5BDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:08:26
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000027B0FA0DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:09:26
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001B00C40DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: -1 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:16:16
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002960D15DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:17:20
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000023E1061DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-03 10:32:29
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x0000021F0885DA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 1 count: 0 dependency_type: spacy_only model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy'] repeat: 0 count:0_repeat:0_time:2021-07-03 11:25:09
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001A50E0EDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 2 count: 0 dependency_type: stanza_spacy model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['stanza', 'spacy'] repeat: 0 count:0_repeat:0_time:2021-07-04 09:49:14
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000001248A0CDA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 2 count: 0 dependency_type: stanza_spacy model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['stanza', 'spacy'] repeat: 0 count:0_repeat:0_time:2021-07-04 11:26:41
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x000002388AA5CA60> learning_rate: 5e-06 l2reg: 0.0001 num_epoch: 100 batch_size: 2 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 3 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-04 13:34:37
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f72122f5ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:1_repeat:0_time:2021-07-04 13:35:36
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f6fffe3aea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 1 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-04 13:38:20
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fe30c107ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7899686520376176, max_test_f1: 0.7561565968932565
count:0_repeat:1_time:2021-07-04 13:46:42
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fe30c107ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 count:0_repeat:0_time:2021-07-04 13:52:04
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f919f9feea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 25 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7821316614420063, max_test_f1: 0.744584369544708
count:0_repeat:1_time:2021-07-04 13:58:10
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f919f9feea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 25 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7695924764890282, max_test_f1: 0.7287433019917096
count:0_repeat:2_time:2021-07-04 14:02:18
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f919f9feea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 25 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 count:0_repeat:0_time:2021-07-04 14:06:55
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f9a15509ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7884012539184952, max_test_f1: 0.7502672012622323
count:0_repeat:1_time:2021-07-04 14:16:39
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f9a15509ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7758620689655172, max_test_f1: 0.7403889637919608
count:0_repeat:2_time:2021-07-04 14:25:58
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f9a15509ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7978056426332288, max_test_f1: 0.7644947332355887
max_test_acc_avg: 0.7873563218390803, max_test_f1_avg: 0.7517169660965939

count:1_repeat:0_time:2021-07-04 14:37:31
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f0d4f59dea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 1 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 count:0_repeat:0_time:2021-07-04 14:45:54
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f5f7417cea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.780564263322884, max_test_f1: 0.739318744790701
count:0_repeat:1_time:2021-07-04 14:52:24
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f5f7417cea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7884012539184952, max_test_f1: 0.7597293969571136
count:0_repeat:2_time:2021-07-04 15:01:42
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f5f7417cea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 0 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7727272727272727, max_test_f1: 0.7398515579071135
max_test_acc_avg: 0.780564263322884, max_test_f1_avg: 0.746299899884976

count:1_repeat:0_time:2021-07-04 15:11:22
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fb5fefd8ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 1 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.8009404388714734, max_test_f1: 0.7583137212719128
count:1_repeat:1_time:2021-07-04 15:19:20
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fb5fefd8ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 1 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7664576802507836, max_test_f1: 0.7289781813108386
count:1_repeat:2_time:2021-07-04 15:26:53
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fb5fefd8ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 1 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.8119122257053292, max_test_f1: 0.7770859094388506
max_test_acc_avg: 0.7931034482758621, max_test_f1_avg: 0.7547926040072007

count:2_repeat:0_time:2021-07-04 15:39:29
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f9fb1ea1ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 2 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7915360501567398, max_test_f1: 0.7608095612691316
count:2_repeat:1_time:2021-07-04 15:47:01
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f9fb1ea1ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 2 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7789968652037618, max_test_f1: 0.7421687014556012
count:2_repeat:2_time:2021-07-04 15:55:19
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f9fb1ea1ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 2 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7931034482758621, max_test_f1: 0.7611725985242114
max_test_acc_avg: 0.787878787878788, max_test_f1_avg: 0.754716953749648

count:3_repeat:0_time:2021-07-04 16:09:28
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f7059b40ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 3 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7884012539184952, max_test_f1: 0.7516313970857006
count:3_repeat:1_time:2021-07-04 16:16:21
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f7059b40ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 3 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7852664576802508, max_test_f1: 0.7493826205505002
count:3_repeat:2_time:2021-07-04 16:24:05
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f7059b40ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 3 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7884012539184952, max_test_f1: 0.7543511654311094
max_test_acc_avg: 0.7873563218390803, max_test_f1_avg: 0.75178839435577

count:4_repeat:0_time:2021-07-04 16:35:00
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f42cfa85ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 4 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7836990595611285, max_test_f1: 0.7499629058951093
count:4_repeat:1_time:2021-07-04 16:42:39
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f42cfa85ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 4 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7946708463949843, max_test_f1: 0.7578711206772529
count:4_repeat:2_time:2021-07-04 16:49:15
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f42cfa85ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 4 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7727272727272727, max_test_f1: 0.7352358625152111
max_test_acc_avg: 0.7836990595611285, max_test_f1_avg: 0.7476899630291912

count:5_repeat:0_time:2021-07-04 16:56:49
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f7525626ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 5 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.786833855799373, max_test_f1: 0.7523033445847425
count:5_repeat:1_time:2021-07-04 17:04:11
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f7525626ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 5 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7899686520376176, max_test_f1: 0.7591759751661978
count:5_repeat:2_time:2021-07-04 17:11:38
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f7525626ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 5 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7727272727272727, max_test_f1: 0.7374947408682347
max_test_acc_avg: 0.7831765935214211, max_test_f1_avg: 0.7496580202063917

count:6_repeat:0_time:2021-07-04 17:19:07
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fa853f17ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 6 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7884012539184952, max_test_f1: 0.7573788293743732
count:6_repeat:1_time:2021-07-04 17:29:14
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fa853f17ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 6 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7774294670846394, max_test_f1: 0.7352384194186138
count:6_repeat:2_time:2021-07-04 17:42:49
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fa853f17ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 6 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7836990595611285, max_test_f1: 0.7437582482148203
max_test_acc_avg: 0.783176593521421, max_test_f1_avg: 0.7454584990026024

count:7_repeat:0_time:2021-07-04 18:03:50
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fe14b443ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 7 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7852664576802508, max_test_f1: 0.7567257459582221
count:7_repeat:1_time:2021-07-04 18:28:05
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fe14b443ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 7 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.774294670846395, max_test_f1: 0.741057769726248
count:7_repeat:2_time:2021-07-04 18:53:29
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fe14b443ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 7 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7962382445141066, max_test_f1: 0.7598431359826104
max_test_acc_avg: 0.7852664576802507, max_test_f1_avg: 0.7525422172223601

count:8_repeat:0_time:2021-07-04 19:16:02
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f741b5d5ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 8 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.780564263322884, max_test_f1: 0.7421539339487562
count:8_repeat:1_time:2021-07-04 19:40:49
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f741b5d5ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 8 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.780564263322884, max_test_f1: 0.747604803830323
count:8_repeat:2_time:2021-07-04 19:51:52
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f741b5d5ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.5 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 8 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7852664576802508, max_test_f1: 0.7469221950618689
max_test_acc_avg: 0.7821316614420063, max_test_f1_avg: 0.7455603109469827

count:9_repeat:0_time:2021-07-04 20:14:24
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f1654711ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 9 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7931034482758621, max_test_f1: 0.7597205175665147
count:9_repeat:1_time:2021-07-04 20:37:32
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f1654711ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 9 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7774294670846394, max_test_f1: 0.7418659889880598
count:9_repeat:2_time:2021-07-04 20:58:54
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f1654711ea0> learning_rate: 2e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 9 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.8009404388714734, max_test_f1: 0.7608903006329398
max_test_acc_avg: 0.7904911180773251, max_test_f1_avg: 0.7541589357291714

count:10_repeat:0_time:2021-07-04 21:24:13
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f0a74da6ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 10 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7962382445141066, max_test_f1: 0.7631793343268752
count:10_repeat:1_time:2021-07-04 21:48:51
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f0a74da6ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 10 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7789968652037618, max_test_f1: 0.7442118623467998
count:10_repeat:2_time:2021-07-04 22:15:17
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f0a74da6ea0> learning_rate: 2e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 10 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7727272727272727, max_test_f1: 0.7395480256257315
max_test_acc_avg: 0.7826541274817137, max_test_f1_avg: 0.7489797407664689

count:11_repeat:0_time:2021-07-04 22:39:01
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fc4f7cc8ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 11 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7884012539184952, max_test_f1: 0.7558357067708169
count:11_repeat:1_time:2021-07-04 23:21:26
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fc4f7cc8ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 11 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7821316614420063, max_test_f1: 0.744250703432403
count:11_repeat:2_time:2021-07-04 23:42:47
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fc4f7cc8ea0> learning_rate: 2e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 1.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 11 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7789968652037618, max_test_f1: 0.738578831754503
max_test_acc_avg: 0.7831765935214211, max_test_f1_avg: 0.746221747319241

count:12_repeat:0_time:2021-07-05 00:13:06
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f39a3886ea0> learning_rate: 1.5e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 12 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.799373040752351, max_test_f1: 0.7635873161296889
count:12_repeat:1_time:2021-07-05 00:42:52
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f39a3886ea0> learning_rate: 1.5e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 12 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7727272727272727, max_test_f1: 0.7333754814368567
count:12_repeat:2_time:2021-07-05 01:12:25
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f39a3886ea0> learning_rate: 1.5e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 12 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7836990595611285, max_test_f1: 0.7483606952746545
max_test_acc_avg: 0.7852664576802507, max_test_f1_avg: 0.7484411642804001

count:13_repeat:0_time:2021-07-05 01:50:35
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fbed291bea0> learning_rate: 1.5e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 13 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7946708463949843, max_test_f1: 0.7631572823603975
count:13_repeat:1_time:2021-07-05 02:20:04
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fbed291bea0> learning_rate: 1.5e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 13 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7711598746081505, max_test_f1: 0.7311183575332759
count:13_repeat:2_time:2021-07-05 02:54:28
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7fbed291bea0> learning_rate: 1.5e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 13 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7774294670846394, max_test_f1: 0.7408538738774366
max_test_acc_avg: 0.7810867293625914, max_test_f1_avg: 0.7450431712570366

count:14_repeat:0_time:2021-07-05 03:29:34
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f2612a8dea0> learning_rate: 1.5e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 14 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7978056426332288, max_test_f1: 0.7596914288165904
count:14_repeat:1_time:2021-07-05 03:59:40
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f2612a8dea0> learning_rate: 1.5e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 14 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7774294670846394, max_test_f1: 0.7445074974404725
count:14_repeat:2_time:2021-07-05 04:26:33
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f2612a8dea0> learning_rate: 1.5e-05 l2reg: 0.0001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.0 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 14 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7789968652037618, max_test_f1: 0.7443517794489442
max_test_acc_avg: 0.7847439916405433, max_test_f1_avg: 0.7495169019020023

count:15_repeat:0_time:2021-07-05 04:57:22
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f1df8cf8ea0> learning_rate: 1.5e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 15 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7962382445141066, max_test_f1: 0.7575319919937012
count:15_repeat:1_time:2021-07-05 05:29:06
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f1df8cf8ea0> learning_rate: 1.5e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 15 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.780564263322884, max_test_f1: 0.7402196385247232
count:15_repeat:2_time:2021-07-05 05:57:03
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f1df8cf8ea0> learning_rate: 1.5e-05 l2reg: 0.01 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 15 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 2 max_test_acc: 0.7884012539184952, max_test_f1: 0.7453881174811406
max_test_acc_avg: 0.7884012539184951, max_test_f1_avg: 0.7477132493331884

count:16_repeat:0_time:2021-07-05 06:25:01
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f324a2a6ea0> learning_rate: 1.5e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 16 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 0 max_test_acc: 0.7931034482758621, max_test_f1: 0.7558641717923708
count:16_repeat:1_time:2021-07-05 06:55:58
 model_name: EnsembleDB dataset: lap14 optimizer: <class 'torch.optim.adam.Adam'> initializer: <function xavier_uniform_ at 0x7f324a2a6ea0> learning_rate: 1.5e-05 l2reg: 0.001 num_epoch: 100 batch_size: 20 log_step: 5 embed_dim: 300 position_dim: 768 position_drop: 0.4 dependency_edge_dim: 100 pretrained_weights: bert-base-uncased num_labels: 3 K_alpha: 1.0 V_alpha: 0.3 n_gpu: 1 hidden_dim: 300 polarities_dim: 3 save: True seed: 9 device: cuda:0 use_lstm_attention: True use_bert: False use_speech_weight: True lcf: cdw num_hidden_layers: 12 SRD: 3 lr_de: 0.5 DB_begin_layer: 8 edge_type_number: 3 count: 16 dependency_type: ensemble model_class: <class 'models.ensemble_DB_Bert.BertForSequenceClassification'> inputs_cols: ['text_indices', 'aspect_indices', 'left_indices', 'dependency_graph_undir', 'dependency_edge_undir', 'position_syntax_indices', 'aspect_double_idx', 'attention_mask'] syntactic_parsing: ['spacy', 'stanza', 'biaffine'] repeat: 1 max_test_acc: 0.7789968652037618, max_test_f1: 0.7439140481410934
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
